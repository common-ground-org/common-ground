{
  "address": "0x830ef5B5F411626cB7015cC784d8bb8Bc922c3a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "managerContractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "governanceRights",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "usageRights",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "projectDescription",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "projectName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "targetFundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minContributeAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fundingDDL",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "milestoneDescriptions",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "releasePercentages",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "deadlines",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "proofUrl",
          "type": "string"
        }
      ],
      "name": "applyForMilestone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "governanceRights",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "usageRights",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "projectDescription",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "projectName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "targetFundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minContributeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentFundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "currentMilestoneIndex",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "currentMilestoneStatus",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "confirm",
          "type": "bool"
        }
      ],
      "name": "reviewMilestoneApplication",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Project.MilestoneStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "showMilestoneStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Project.ProjectStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "showProjectStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x054ff5adb0f7f0e2da471acb9d0a5db8dd718d35783eaa21788444aafccdbebb",
  "receipt": {
    "to": null,
    "from": "0xEd341189327CABCD25813dbCB432eb869130aEfe",
    "contractAddress": "0x830ef5B5F411626cB7015cC784d8bb8Bc922c3a2",
    "transactionIndex": 0,
    "gasUsed": "1394971",
    "logsBloom": "0x
    "blockHash": "0x85009ac2e7c62c02a525a49bb90a1b479e191eb9c5a27cb3f4fe26cf8bcd9ee5",
    "transactionHash": "0x054ff5adb0f7f0e2da471acb9d0a5db8dd718d35783eaa21788444aafccdbebb",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 14514970,
        "transactionHash": "0x054ff5adb0f7f0e2da471acb9d0a5db8dd718d35783eaa21788444aafccdbebb",
        "address": "0x830ef5B5F411626cB7015cC784d8bb8Bc922c3a2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ed341189327cabcd25813dbcb432eb869130aefe"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x85009ac2e7c62c02a525a49bb90a1b479e191eb9c5a27cb3f4fe26cf8bcd9ee5"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 14514970,
        "transactionHash": "0x054ff5adb0f7f0e2da471acb9d0a5db8dd718d35783eaa21788444aafccdbebb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ed341189327cabcd25813dbcb432eb869130aefe",
          "0x0000000000000000000000006dc2dd54f24979ec26212794c71afefed722280c"
        ],
        "data": "0x000000000000000000000000000000000000000000000000009cbb3adce6c34600000000000000000000000000000000000000000000000001f62b77276b4c0100000000000000000000000000000000000000000000040aa7aa0e3018ba78cb0000000000000000000000000000000000000000000000000159703c4a8488bb00000000000000000000000000000000000000000000040aa846c96af5a13c11",
        "logIndex": 1,
        "blockHash": "0x85009ac2e7c62c02a525a49bb90a1b479e191eb9c5a27cb3f4fe26cf8bcd9ee5"
      }
    ],
    "blockNumber": 14514970,
    "cumulativeGasUsed": "1394971",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xeDc6c016aBD2b01e15633866d559716D01FcA4e2",
    "Default Governance Rights",
    "Default Usage Rights",
    "Project Description",
    "0x50726f6a656374204e616d650000000000000000000000000000000000000000",
    "1000000000000000000000",
    "10000000000000000000",
    "0xEd341189327CABCD25813dbCB432eb869130aEfe",
    1734392366,
    [
      "Milestone 1",
      "Milestone 2"
    ],
    [
      50,
      50
    ],
    [
      1736984366,
      1739576366
    ]
  ],
  "numDeployments": 3,
  "solcInputHash": "b0c2300abe990406cf2200a4cb64582b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"managerContractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"governanceRights\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"usageRights\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDescription\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"targetFundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minContributeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundingDDL\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"milestoneDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"releasePercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deadlines\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"proofUrl\",\"type\":\"string\"}],\"name\":\"applyForMilestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"governanceRights\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"usageRights\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDescription\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"targetFundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minContributeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentFundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"currentMilestoneIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currentMilestoneStatus\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"confirm\",\"type\":\"bool\"}],\"name\":\"reviewMilestoneApplication\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Project.MilestoneStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"showMilestoneStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Project.ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"showProjectStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Project.sol\":\"Project\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/CommonGroundManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./Project.sol\\\";\\r\\n\\r\\ncontract CommonGroundManager is Ownable {\\r\\n\\t// Structs\\r\\n\\r\\n\\tenum ApplicationStatus {\\r\\n\\t\\tPENDING,\\r\\n\\t\\tAPPROVED,\\r\\n\\t\\tDECLINED\\r\\n\\t}\\r\\n\\r\\n\\tstruct MilestoneApplication {\\r\\n\\t\\taddress project;\\r\\n\\t\\tuint256 stage;\\r\\n\\t\\tApplicationStatus status;\\r\\n\\t}\\r\\n\\r\\n\\tstruct ProjectSummary {\\r\\n\\t\\taddress project;\\r\\n\\t\\tstring description;\\r\\n\\t\\tstring status;\\r\\n\\t}\\r\\n\\r\\n\\t// State\\r\\n\\r\\n\\tmapping(uint256 => address) private _projects;\\r\\n\\tmapping(address => uint256) private _project_ids;\\r\\n\\tuint256 private _total_projects;\\r\\n\\r\\n\\tmapping(uint256 => address) private _evaluators;\\r\\n\\tmapping(address => uint256) private _evaluator_ids;\\r\\n\\tuint256 private _total_evaluators;\\r\\n\\r\\n\\tmapping(uint256 => MilestoneApplication) private _milestone_applications;\\r\\n\\tmapping(address => uint256) private _project_applications;\\r\\n\\tuint256 private _total_milestone_applications;\\r\\n\\r\\n\\t// Constructor\\r\\n\\r\\n\\tconstructor() Ownable(msg.sender) {}\\r\\n\\r\\n\\t// Functions\\r\\n\\r\\n\\tfunction createProject(\\r\\n\\t\\tstring memory governanceRights,\\r\\n\\t\\tstring memory usageRights,\\r\\n\\t\\tstring memory projectDescription,\\r\\n\\t\\tstring memory projectName,\\r\\n\\t\\tuint256 targetFundingAmount,\\r\\n\\t\\tuint256 minContributeAmount,\\r\\n\\t\\taddress token,\\r\\n\\t\\tuint256 fundingDDL,\\r\\n\\t\\tstring[] memory milestoneDescriptions,\\r\\n\\t\\tuint256[] memory fundingAmounts,\\r\\n\\t\\tuint256[] memory deadlines\\r\\n\\t) public returns (address) {\\r\\n\\t\\t_total_projects++;\\r\\n\\t\\taddress project = address(\\r\\n\\t\\t\\tnew Project(\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tgovernanceRights,\\r\\n\\t\\t\\t\\tusageRights,\\r\\n\\t\\t\\t\\tprojectDescription,\\r\\n\\t\\t\\t\\tprojectName,\\r\\n\\t\\t\\t\\ttargetFundingAmount,\\r\\n\\t\\t\\t\\tminContributeAmount,\\r\\n\\t\\t\\t\\ttoken,\\r\\n\\t\\t\\t\\tfundingDDL,\\r\\n\\t\\t\\t\\tmilestoneDescriptions,\\r\\n\\t\\t\\t\\tfundingAmounts,\\r\\n\\t\\t\\t\\tdeadlines\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\t\\t_projects[_total_projects] = project;\\r\\n\\t\\t_project_ids[project] = _total_projects;\\r\\n\\t\\treturn project;\\r\\n\\t}\\r\\n\\r\\n\\tfunction createMilestoneApplication(address project, uint256 stage) public {\\r\\n\\t\\trequire(_project_ids[project] > 0, \\\"Project does not exist\\\");\\r\\n\\t\\t_total_milestone_applications++;\\r\\n\\t\\t_milestone_applications[\\r\\n\\t\\t\\t_total_milestone_applications\\r\\n\\t\\t] = MilestoneApplication(project, stage, ApplicationStatus.PENDING);\\r\\n\\t\\t_project_applications[project] = _total_milestone_applications;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getMilestoneApplication(\\r\\n\\t\\taddress project\\r\\n\\t) public view returns (MilestoneApplication memory) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_project_applications[project] > 0,\\r\\n\\t\\t\\t\\\"Project does not have a milestone application\\\"\\r\\n\\t\\t);\\r\\n\\t\\treturn _milestone_applications[_project_applications[project]];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getProjectAddresses() public view returns (address[] memory) {\\r\\n\\t\\taddress[] memory addresses = new address[](_total_projects);\\r\\n\\t\\tfor (uint256 i = 1; i <= _total_projects; i++) {\\r\\n\\t\\t\\taddresses[i - 1] = _projects[i];\\r\\n\\t\\t}\\r\\n\\t\\treturn addresses;\\r\\n\\t}\\r\\n\\r\\n\\tfunction CommonGroundInfo() public view returns (uint256, uint256) {\\r\\n\\t\\treturn (_total_projects, _total_evaluators);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addEvaluator(address evaluator) public onlyOwner {\\r\\n\\t\\t_total_evaluators++;\\r\\n\\t\\t_evaluators[_total_evaluators] = evaluator;\\r\\n\\t\\t_evaluator_ids[evaluator] = _total_evaluators;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isEvaluator(address evaluator) public view returns (bool) {\\r\\n\\t\\treturn _evaluator_ids[evaluator] > 0;\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0x5775c8c638c18b9e480880f9c6751bf5b0c5f43527866ed47c864db0de8611c7\",\"license\":\"MIT\"},\"contracts/Project.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"./CommonGroundManager.sol\\\";\\r\\n\\r\\ncontract Project is Ownable {\\r\\n\\tusing SafeERC20 for IERC20;\\r\\n\\r\\n\\t// Structs\\r\\n\\r\\n\\tstruct Milestone {\\r\\n\\t\\tuint256 id;\\r\\n\\t\\tstring description;\\r\\n\\t\\tuint256 releasePercentage;\\r\\n\\t\\tuint256 deadline;\\r\\n\\t\\tMilestoneStatus status;\\r\\n\\t\\tstring proofUrl;\\r\\n\\t}\\r\\n\\r\\n    // PENDING is the default status.\\r\\n    // When the owner apply to evaluate, the status is set to EVALUATING.\\r\\n    // If the application is approved, the status is set to COMPLETED.\\r\\n    // If the application is declined, the status is set back to PENDING.\\r\\n\\tenum MilestoneStatus {\\r\\n\\t\\tPENDING,\\r\\n\\t\\tEVALUATING,\\r\\n\\t\\tCOMPLETED\\r\\n\\t}\\r\\n\\r\\n\\t// PENDING is the default status.\\r\\n\\t// When the project is created, it is FUNDING.\\r\\n\\t// When the total funding amount is reached, the project status is set to ACTIVE.\\r\\n\\t// When all milestones are completed, the project status is set to COMPLETED.\\r\\n\\t// Evaluators can cancel the project, setting the status to CANCELLED.\\r\\n\\tenum ProjectStatus {\\r\\n\\t\\tPENDING,\\r\\n\\t\\tFUNDING,\\r\\n\\t\\tACTIVE,\\r\\n\\t\\tCOMPLETED,\\r\\n\\t\\tCANCELLED\\r\\n\\t}\\r\\n\\r\\n\\t// Modifiers\\r\\n\\r\\n\\tmodifier onlyEvaluator() {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_MANAGER_CONTRACT_ADDRESS.isEvaluator(msg.sender),\\r\\n\\t\\t\\t\\\"Only evaluators can call this function\\\"\\r\\n\\t\\t);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMilestoneStatus(MilestoneStatus status) {\\r\\n\\t\\trequire(_status == ProjectStatus.ACTIVE, \\\"Project is not active\\\");\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_current_milestone_index < _MILESTONES.length,\\r\\n\\t\\t\\t\\\"No more milestones to evaluate\\\"\\r\\n\\t\\t);\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_MILESTONES[_current_milestone_index].status == status,\\r\\n\\t\\t\\t\\\"Milestone is not in the correct status\\\"\\r\\n\\t\\t);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyProjectStatus(ProjectStatus status) {\\r\\n\\t\\trequire(_status == status, \\\"Project is not in the correct status\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\t// Project information\\r\\n\\r\\n\\tstring private _GOVERNANCE_RIGHTS;\\r\\n\\tstring private _USAGE_RIGHTS;\\r\\n\\tstring private _PROJECT_DESCRIPTION;\\r\\n\\tstring private _PROJECT_NAME;\\r\\n    uint256 private immutable _FUNDING_DDL;\\r\\n\\tMilestone[] private _MILESTONES;\\r\\n\\tuint256 private immutable _TARGET_FUNDING_AMOUNT;\\r\\n\\tuint256 private immutable _MIN_CONTRIBUTE_AMOUNT;\\r\\n\\t// IERC20 private immutable _TOKEN;\\r\\n\\taddress private immutable _TOKEN_ADDRESS;\\r\\n\\tCommonGroundManager private immutable _MANAGER_CONTRACT_ADDRESS;\\r\\n\\r\\n\\t// State\\r\\n\\r\\n\\tmapping(address => uint256) private _funding_amounts;\\r\\n\\tuint256 private _current_funding_amount;\\r\\n\\tProjectStatus private _status;\\r\\n\\tuint256 private _current_milestone_index;\\r\\n\\r\\n\\t// Constructor\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress managerContractAddress,\\r\\n\\t\\tstring memory governanceRights,\\r\\n\\t\\tstring memory usageRights,\\r\\n\\t\\tstring memory projectDescription,\\r\\n\\t\\tstring memory projectName,\\r\\n\\t\\tuint256 targetFundingAmount,\\r\\n\\t\\tuint256 minContributeAmount,\\r\\n\\t\\taddress token,\\r\\n        uint256 fundingDDL,\\r\\n\\t\\tstring[] memory milestoneDescriptions,\\r\\n\\t\\tuint256[] memory releasePercentages,\\r\\n\\t\\tuint256[] memory deadlines\\r\\n\\t) Ownable(msg.sender) {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tmilestoneDescriptions.length == releasePercentages.length &&\\r\\n\\t\\t\\t\\treleasePercentages.length == deadlines.length,\\r\\n\\t\\t\\t\\\"Milestone arrays must have equal length\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// Check percentage sum\\r\\n\\t\\tuint256 releasePercentageSum = 0;\\r\\n\\t\\tfor (uint256 i = 0; i < releasePercentages.length; i++) {\\r\\n\\t\\t\\treleasePercentageSum += releasePercentages[i];\\r\\n\\t\\t}\\r\\n\\t\\trequire(\\r\\n\\t\\t\\treleasePercentageSum == 100,\\r\\n\\t\\t\\t\\\"Release percentages must sum to 100\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t_GOVERNANCE_RIGHTS = governanceRights;\\r\\n\\t\\t_USAGE_RIGHTS = usageRights;\\r\\n\\t\\t_PROJECT_DESCRIPTION = projectDescription;\\r\\n\\t\\t_PROJECT_NAME = projectName;\\r\\n\\t\\t_TARGET_FUNDING_AMOUNT = targetFundingAmount;\\r\\n\\t\\t_MIN_CONTRIBUTE_AMOUNT = minContributeAmount;\\r\\n        _FUNDING_DDL = fundingDDL;\\r\\n\\t\\t// _TOKEN = IERC20(token);\\r\\n\\t\\t_TOKEN_ADDRESS = token;\\r\\n\\t\\t_MANAGER_CONTRACT_ADDRESS = CommonGroundManager(managerContractAddress);\\r\\n\\r\\n\\t\\t// Initialize milestones with user provided values\\r\\n\\t\\tfor (uint256 i = 0; i < milestoneDescriptions.length; i++) {\\r\\n\\t\\t\\t_MILESTONES.push(\\r\\n\\t\\t\\t\\tMilestone({\\r\\n\\t\\t\\t\\t\\tid: i,\\r\\n\\t\\t\\t\\t\\tdescription: milestoneDescriptions[i],\\r\\n\\t\\t\\t\\t\\treleasePercentage: releasePercentages[i],\\r\\n\\t\\t\\t\\t\\tdeadline: deadlines[i],\\r\\n\\t\\t\\t\\t\\tstatus: MilestoneStatus.PENDING,\\r\\n\\t\\t\\t\\t\\tproofUrl: \\\"\\\"\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\t\\t_current_milestone_index = 0;\\r\\n\\t\\t_status = ProjectStatus.FUNDING;\\r\\n\\t}\\r\\n\\r\\n\\t// Functions\\r\\n\\r\\n\\tfunction projectInfo()\\r\\n\\t\\tpublic\\r\\n\\t\\tview\\r\\n\\t\\treturns (\\r\\n\\t\\t\\tstring memory governanceRights,\\r\\n\\t\\t\\tstring memory usageRights,\\r\\n\\t\\t\\tstring memory projectDescription,\\r\\n\\t\\t\\tstring memory projectName,\\r\\n\\t\\t\\tuint256 targetFundingAmount,\\r\\n\\t\\t\\tuint256 minContributeAmount,\\r\\n\\t\\t\\tuint256 currentFundingAmount,\\r\\n\\t\\t\\tstring memory status,\\r\\n\\t\\t\\tuint256 currentMilestoneIndex,\\r\\n\\t\\t\\tstring memory currentMilestoneStatus\\r\\n\\t\\t)\\r\\n\\t{\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t_GOVERNANCE_RIGHTS,\\r\\n\\t\\t\\t_USAGE_RIGHTS,\\r\\n\\t\\t\\t_PROJECT_DESCRIPTION,\\r\\n\\t\\t\\t_PROJECT_NAME,\\r\\n\\t\\t\\t_TARGET_FUNDING_AMOUNT,\\r\\n\\t\\t\\t_MIN_CONTRIBUTE_AMOUNT,\\r\\n\\t\\t\\t_current_funding_amount,\\r\\n\\t\\t\\tshowProjectStatus(_status),\\r\\n\\t\\t\\t_current_milestone_index,\\r\\n\\t\\t\\tshowMilestoneStatus(_MILESTONES[_current_milestone_index].status)\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction contribute(\\r\\n\\t\\tuint256 amount\\r\\n\\t) public onlyProjectStatus(ProjectStatus.FUNDING) payable {\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tamount > _MIN_CONTRIBUTE_AMOUNT,\\r\\n\\t\\t\\t\\\"Amount must be greater than minimum contribute amount\\\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\trequire(msg.value == amount, \\\"Amount must be equal to the contribution\\\");\\r\\n\\r\\n\\t\\ttransferTokensToThisFrom(msg.sender, amount);\\r\\n\\r\\n\\t\\t_funding_amounts[msg.sender] += amount;\\r\\n\\t\\t_current_funding_amount += amount;\\r\\n\\r\\n\\t\\tif (_current_funding_amount >= _TARGET_FUNDING_AMOUNT) {\\r\\n\\t\\t\\t_status = ProjectStatus.ACTIVE;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction applyForMilestone(\\r\\n        string memory proofUrl\\r\\n    )\\r\\n\\t\\tpublic\\r\\n\\t\\tonlyOwner\\r\\n\\t\\tonlyProjectStatus(ProjectStatus.ACTIVE)\\r\\n\\t{\\r\\n\\t\\t// _MANAGER_CONTRACT_ADDRESS.createMilestoneApplication(address(this), _current_milestone_index);\\r\\n\\t\\trequire(\\r\\n\\t\\t\\t_current_milestone_index < _MILESTONES.length,\\r\\n\\t\\t\\t\\\"No more milestones to apply for\\\"\\r\\n\\t\\t);\\r\\n\\t\\t_MILESTONES[_current_milestone_index].status = MilestoneStatus.EVALUATING;\\r\\n\\t\\t_MILESTONES[_current_milestone_index].proofUrl = proofUrl;\\r\\n\\t}\\r\\n\\r\\n\\tfunction reviewMilestoneApplication(\\r\\n\\t\\tbool confirm\\r\\n\\t) public onlyEvaluator onlyMilestoneStatus(MilestoneStatus.EVALUATING) {\\r\\n\\t\\tif (confirm) {\\r\\n\\t\\t\\t_MILESTONES[_current_milestone_index].status = MilestoneStatus\\r\\n\\t\\t\\t\\t.COMPLETED;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t_MILESTONES[_current_milestone_index].status = MilestoneStatus\\r\\n\\t\\t\\t\\t.PENDING;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Helper functions\\r\\n\\r\\n\\tfunction showMilestoneStatus(\\r\\n\\t\\tMilestoneStatus status\\r\\n\\t) public pure returns (string memory) {\\r\\n\\t\\tif (status == MilestoneStatus.PENDING) {\\r\\n\\t\\t\\treturn \\\"pending\\\";\\r\\n\\t\\t} else if (status == MilestoneStatus.EVALUATING) {\\r\\n\\t\\t\\treturn \\\"evaluating\\\";\\r\\n\\t\\t} else if (status == MilestoneStatus.COMPLETED) {\\r\\n\\t\\t\\treturn \\\"completed\\\";\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn \\\"unknown\\\";\\r\\n\\t}\\r\\n\\r\\n\\tfunction showProjectStatus(\\r\\n\\t\\tProjectStatus status\\r\\n\\t) public pure returns (string memory) {\\r\\n\\t\\tif (status == ProjectStatus.PENDING) {\\r\\n\\t\\t\\treturn \\\"pending\\\";\\r\\n\\t\\t} else if (status == ProjectStatus.FUNDING) {\\r\\n\\t\\t\\treturn \\\"funding\\\";\\r\\n\\t\\t} else if (status == ProjectStatus.ACTIVE) {\\r\\n\\t\\t\\treturn \\\"active\\\";\\r\\n\\t\\t} else if (status == ProjectStatus.COMPLETED) {\\r\\n\\t\\t\\treturn \\\"completed\\\";\\r\\n\\t\\t} else if (status == ProjectStatus.CANCELLED) {\\r\\n\\t\\t\\treturn \\\"cancelled\\\";\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn \\\"unknown\\\";\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferTokens(address to, uint256 amount) internal {\\r\\n\\t\\t// _TOKEN.safeTransfer(to, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferTokensFrom(\\r\\n\\t\\taddress from,\\r\\n\\t\\taddress to,\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal {\\r\\n\\t\\t// _TOKEN.safeTransferFrom(from, to, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferTokensToThisFrom(address from, uint256 amount) internal {\\r\\n\\t\\t// _TOKEN.safeTransferFrom(from, address(this), amount);\\r\\n\\t}\\r\\n\\r\\n    function refundAll() internal {\\r\\n        // _TOKEN.safeTransfer(msg.sender, _funding_amounts[msg.sender]);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0345bfba2d4a82691d225b6323fad8b02f45b3a20b7fbcb2ae0fb02e209d754\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523462000dd95762001f70803803806200001e8162000e1e565b92833961018082828101031262000dd9576200003a8262000e44565b60208301519092906001600160401b03811162000dd957620000629083830190830162000e59565b60408201519092906001600160401b03811162000dd9576200008a9082840190840162000e59565b60608301519094906001600160401b03811162000dd957620000b29083850190850162000e59565b60808401519091906001600160401b03811162000dd957620000da9084860190860162000e59565b60a08501519060c0860151620000f360e0880162000e44565b92610100880151926101208901519760018060401b03891162000dd957808a01601f8a8c0101121562000dd957888a015162000139620001338262000ecb565b62000e1e565b9960208b83815201908c602085820191838660051b910101011162000dd9578c9160208083850101935b838660051b91010101831062000dde57505050506101408a01516001600160401b03811162000dd9576200019d90828c01908c0162000ee3565b6101608b0151909a906001600160401b03811162000dd957620001c4928201910162000ee3565b96331562000dc05760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a389518b51809114908162000db4575b501562000d62575060009b8c5b8d8c5111156200027a57620002468e8d62000f50565b51810180911162000264576200025d909d62000f40565b9c62000230565b634e487b7160e01b600052601160045260246000fd5b60648d910362000d11578051906001600160401b0382116200076a5760015490600182811c9216801562000d06575b6020831014620007495781601f84931162000ca5575b50602090601f831160011462000c2b5760009262000c1f575b50508160011b916000199060031b1c1916176001555b8051906001600160401b0382116200076a5760025490600182811c9216801562000c14575b6020831014620007495781601f84931162000bb3575b50602090601f831160011462000b355760009262000b29575b50508160011b916000199060031b1c1916176002555b8051906001600160401b0382116200076a5760035490600182811c9216801562000b1e575b6020831014620007495781601f84931162000aac575b50602090601f831160011462000a1d5760009262000a11575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200076a5760045490600182811c9216801562000a06575b6020831014620007495781601f84931162000994575b50602090601f83116001146200090557600092620008f9575b50508160011b916000199060031b1c1916176004555b60a05260c05260805260e0526001600160a01b03166101005260005b8251811015620008a1576200045e818462000f50565b516200046b828662000f50565b5162000478838562000f50565b51604051929091906001600160401b0360c08501908111908511176200076a5760c084016040528484526020840152604083015260608201526000608082015260405180602081011060018060401b036020830111176200076a57602081016040526000815260a082015260055490680100000000000000008210156200076a5760018201806005558210156200088b576005600052602060002090805160068402830155602081015180519060018060401b0382116200076a576001600686028501015490600182811c9216801562000880575b6020831014620007495781601f84931162000823575b50602090601f8311600114620007a25760009262000796575b50508160011b916000199060031b1c191617600160068502840101555b6040810151600684028301600281019190915560608201516003808301919091556080830151929160040190831015620007805760a09260ff80198354169116179055015180519060018060401b0382116200076a5760056006850284010154600181811c911680156200075f575b60208210146200074957601f8111620006f8575b50602090601f8311600114620006735782600593620006619796959360069360009262000667575b50508160011b916000199060031b1c191617930201015562000f40565b62000448565b015190508b8062000644565b9060056006860285010160005260206000209160005b601f1985168110620006df5750836200066197969593600693600193600597601f19811610620006c5575b505050811b01930201015562000f40565b015160001960f88460031b161c191690558b8080620006b4565b9192602060018192868501518155019401920162000689565b6005600686028501016000526020600020601f840160051c81016020851062000741575b601f830160051c82018110620007345750506200061c565b600081556001016200071c565b50806200071c565b634e487b7160e01b600052602260045260246000fd5b90607f169062000608565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b0151905089806200057c565b92506001600687028601016000526020600020906000935b601f198416851062000807576001945083601f19811610620007ed575b505050811b016001600685028401015562000599565b015160001960f88460031b161c19169055898080620007d7565b81810151835560209485019460019093019290910190620007ba565b9091506001600687028601016000526020600020601f840160051c81016020851062000878575b90849392915b601f830160051c820181106200086857505062000563565b6000815585945060010162000850565b50806200084a565b91607f16916200054d565b634e487b7160e01b600052603260045260246000fd5b6000600955600160ff196008541617600855604051610fca908162000f66823960805181505060a05181818161019a01526109cb015260c05181818161014201526109f1015260e051815050610100518161056b0152f35b015190508a8062000416565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f198416851062000978576001945083601f198116106200095e575b505050811b016004556200042c565b015160001960f88460031b161c191690558a80806200094f565b8181015183556020948501946001909301929091019062000932565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810160208510620009fe575b90849392915b601f830160051c82018110620009ee575050620003fd565b60008155859450600101620009d6565b5080620009d0565b91607f1691620003e7565b015190508b80620003ac565b6003600090815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851062000a90576001945083601f1981161062000a76575b505050811b01600355620003c2565b015160001960f88460031b161c191690558b808062000a67565b8181015183556020948501946001909301929091019062000a4a565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c81016020851062000b16575b90849392915b601f830160051c8201811062000b0657505062000393565b6000815585945060010162000aee565b508062000ae8565b91607f16916200037d565b015190508c8062000342565b60026000908152935060008051602062001f3083398151915291905b601f198416851062000b97576001945083601f1981161062000b7d575b505050811b0160025562000358565b015160001960f88460031b161c191690558c808062000b6e565b8181015183556020948501946001909301929091019062000b51565b600260005290915060008051602062001f30833981519152601f840160051c81016020851062000c0c575b90849392915b601f830160051c8201811062000bfc57505062000329565b6000815585945060010162000be4565b508062000bde565b91607f169162000313565b015190508d80620002d8565b6001600090815260008051602062001f508339815191529350601f198516905b81811062000c8c575090846001959493921062000c72575b505050811b01600155620002ee565b015160001960f88460031b161c191690558d808062000c63565b9293602060018192878601518155019501930162000c4b565b600160005290915060008051602062001f50833981519152601f840160051c81016020851062000cfe575b90849392915b601f830160051c8201811062000cee575050620002bf565b6000815585945060010162000cd6565b508062000cd0565b91607f1691620002a9565b60405162461bcd60e51b815260206004820152602360248201527f52656c656173652070657263656e7461676573206d7573742073756d20746f2060448201526203130360ec1b6064820152608490fd5b62461bcd60e51b815260206004820152602760248201527f4d696c6573746f6e6520617272617973206d757374206861766520657175616c604482015266040d8cadccee8d60cb1b6064820152608490fd5b90508951143862000223565b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b8251906001600160401b03821162000dd957828f91602080949162000e0e8293838c880191878901010162000e59565b8152019501949291905062000163565b6040519190601f01601f191682016001600160401b038111838210176200076a57604052565b51906001600160a01b038216820362000dd957565b919080601f8401121562000dd95782516001600160401b0381116200076a5760209062000e8f601f8201601f1916830162000e1e565b9281845282828701011162000dd95760005b81811062000eb757508260009394955001015290565b858101830151848201840152820162000ea1565b6001600160401b0381116200076a5760051b60200190565b9080601f8301121562000dd95781519062000f02620001338362000ecb565b9182938184526020808095019260051b82010192831162000dd9578301905b82821062000f30575050505090565b8151815290830190830162000f21565b6000198114620002645760010190565b80518210156200088b5760209160051b01019056fe60406080815260048036101561001457600080fd5b600091823560e01c8063185b691014610858578063564a8b991461082d578063715018a6146107d35780638da5cb5b146107ab578063a4086fa914610531578063a6129b81146102e3578063b7ea4de61461029e578063c1cbbca7146101135763f2fde38b1461008357600080fd5b3461010f57602036600319011261010f576001600160a01b0382358181169391929084900361010b576100b4610cce565b83156100f557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b509190602036600319011261029a5780359060ff6008541660058110156102875760016101409114610d85565b7f0000000000000000000000000000000000000000000000000000000000000000821115610226578134036101d2575061019491923384526006602052832061018a828254610ddd565b9055600754610ddd565b806007557f000000000000000000000000000000000000000000000000000000000000000011156101c25780f35b600260ff19600854161760085580f35b608490602085519162461bcd60e51b8352820152602860248201527f416d6f756e74206d75737420626520657175616c20746f2074686520636f6e746044820152673934b13aba34b7b760c11b6064820152fd5b608490602085519162461bcd60e51b8352820152603560248201527f416d6f756e74206d7573742062652067726561746572207468616e206d696e696044820152741b5d5b4818dbdb9d1c9a589d5d1948185b5bdd5b9d605a1b6064820152fd5b634e487b7160e01b845260218252602484fd5b5080fd5b50903461010f57602036600319011261010f57359160058310156102e057506102c96102dc92610ee1565b9051918291602083526020830190610c3a565b0390f35b80fd5b503461010f576020908160031936011261052d5782359167ffffffffffffffff9182841161052957366023850112156105295783850135908382116105165780519087601f1996601f9461033d878a888401160186610cac565b808552366024828401011161010f578060248893018387013784010152610362610cce565b60ff60085416600581101561050357600261037d9114610d85565b600954906005548210156104c157506103968791610cfa565b5001926001938460ff1982541617905560056103b3600954610cfa565b50019682519586116104ae57506103ca8754610d4b565b83811161046b575b508092851160011461040c5750839450908392918794610401575b50501b916000199060031b1c191617905580f35b0151925038806103ed565b9294849081168789528489209489905b888383106104515750505010610438575b505050811b01905580f35b015160001960f88460031b161c1916905538808061042d565b85870151885590960195948501948793509081019061041c565b8789528189208480880160051c8201928489106104a5575b0160051c019085905b82811061049a5750506103d2565b8a815501859061048c565b92508192610483565b634e487b7160e01b895260419052602488fd5b5162461bcd60e51b8152808801859052602481018490527f4e6f206d6f7265206d696c6573746f6e657320746f206170706c7920666f72006044820152606490fd5b634e487b7160e01b895260218852602489fd5b634e487b7160e01b875260418652602487fd5b8580fd5b8380fd5b503461010f5760208060031936011261052d57823590811515820361010b578251631b561cf960e01b8152338582015260249190818184817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156107a1578791610767575b50156107175760ff600854166005811015610705576002036106cc576009549360055485101561068b5760ff866105d987610cfa565b50015416600381101561067957600103610629575050506000146106135750610603600954610cfa565b5001805460ff1916600217905580f35b61061c90610cfa565b5001805460ff1916905580f35b6084928692602692519362461bcd60e51b85528401528201527f4d696c6573746f6e65206973206e6f7420696e2074686520636f72726563742060448201526573746174757360d01b6064820152fd5b634e487b7160e01b8852602187528388fd5b6064928692601e92519362461bcd60e51b85528401528201527f4e6f206d6f7265206d696c6573746f6e657320746f206576616c7561746500006044820152fd5b6015925060649493519362461bcd60e51b85528401528201527450726f6a656374206973206e6f742061637469766560581b6044820152fd5b634e487b7160e01b8752602186528287fd5b6026925060849493519362461bcd60e51b85528401528201527f4f6e6c79206576616c7561746f72732063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152fd5b90508181813d831161079a575b61077e8183610cac565b810103126107965751801515810361079657386105a3565b8680fd5b503d610774565b85513d89823e3d90fd5b83823461029a578160031936011261029a57905490516001600160a01b039091168152602090f35b83346102e057806003193601126102e0576107ec610cce565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461010f57602036600319011261010f57359160038310156102e057506102c96102dc92610e6b565b503461010f578260031936011261010f5760075461087a60ff60085416610ee1565b6009549361089660ff8261088d88610cfa565b50015416610e6b565b938051918792600193818554916108ac83610d4b565b80835292878116908115610c1b5750600114610bbe575b6108cf92500382610cac565b825198808a600254916108e183610d4b565b80835292888116908115610b9f5750600114610b42575b6109049250038b610cac565b83519281846003549161091683610d4b565b80835292898116908115610b235750600114610ac5575b61093992500385610cac565b8451958282549261094984610d4b565b808a5293838116908115610a965750600114610a3c575b50505050936109ba61099f9997946102dc9997946109ad6109c89561098a86610a279b0387610cac565b83519e8f9e8f92610140808552840190610c3a565b916020818403910152610c3a565b918c8303908d0152610c3a565b9089820360608b0152610c3a565b917f000000000000000000000000000000000000000000000000000000000000000060808901527f000000000000000000000000000000000000000000000000000000000000000060a089015260c088015286820360e0880152610c3a565b91610100850152838203610120850152610c3a565b815292507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610a7e5750505084016020016109ba84846109ad610960565b80546020858a01810191909152909301928101610a62565b60ff19166020808c019190915294151560051b8a0190940194506109ba93508792508691506109ad9050610960565b5060038452908390887fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610b09575050509060206109399282010161092d565b6020929450805483858b0101520191019091888793610af0565b6020925061093994915060ff191682840152151560051b82010161092d565b5060028352908290877f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b828410610b8657505050906020610904928201016108f8565b6020929483858354920101520191019091878d93610b6d565b6020925061090494915060ff191682840152151560051b8201016108f8565b50858b52908a90867fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610c01575050509060206108cf928201016108c3565b602092945080548385880101520191019091868493610be8565b602092506108cf94915060ff191682840152151560051b8201016108c3565b919082519283825260005b848110610c66575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c45565b6040810190811067ffffffffffffffff821117610c9657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610c9657604052565b6000546001600160a01b03163303610ce257565b60405163118cdaa760e01b8152336004820152602490fd5b600554811015610d35576006906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610d7b575b6020831014610d6557565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d5a565b15610d8c57565b60405162461bcd60e51b8152602060048201526024808201527f50726f6a656374206973206e6f7420696e2074686520636f72726563742073746044820152636174757360e01b6064820152608490fd5b91908201809211610dea57565b634e487b7160e01b600052601160045260246000fd5b60405190610e0d82610c7a565b600982526818dbdb5c1b195d195960ba1b6020830152565b60405190610e3282610c7a565b600782526670656e64696e6760c81b6020830152565b60405190610e5582610c7a565b60078252663ab735b737bbb760c91b6020830152565b6003811015610ecb5780610e855750610e82610e25565b90565b60018103610eb45750604051610e9a81610c7a565b600a8152696576616c756174696e6760b01b602082015290565b600214610ec357610e82610e48565b610e82610e00565b634e487b7160e01b600052602160045260246000fd5b6005811015610ecb5780610ef85750610e82610e25565b60018103610f245750604051610f0d81610c7a565b600781526666756e64696e6760c81b602082015290565b60028103610f4f5750604051610f3981610c7a565b600681526561637469766560d01b602082015290565b60038103610f605750610e82610e00565b600414610f6f57610e82610e48565b604051610f7b81610c7a565b600981526818d85b98d95b1b195960ba1b60208201529056fea2646970667358221220fe19f1dd253fa0117a11c35267da8dbdfadb4b7ed1528ca5d0a49ad77fc1e74a64736f6c63430008140033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Project.sol:Project",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1222,
        "contract": "contracts/Project.sol:Project",
        "label": "_GOVERNANCE_RIGHTS",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 1224,
        "contract": "contracts/Project.sol:Project",
        "label": "_USAGE_RIGHTS",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 1226,
        "contract": "contracts/Project.sol:Project",
        "label": "_PROJECT_DESCRIPTION",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 1228,
        "contract": "contracts/Project.sol:Project",
        "label": "_PROJECT_NAME",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1234,
        "contract": "contracts/Project.sol:Project",
        "label": "_MILESTONES",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Milestone)1150_storage)dyn_storage"
      },
      {
        "astId": 1247,
        "contract": "contracts/Project.sol:Project",
        "label": "_funding_amounts",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1249,
        "contract": "contracts/Project.sol:Project",
        "label": "_current_funding_amount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1252,
        "contract": "contracts/Project.sol:Project",
        "label": "_status",
        "offset": 0,
        "slot": "8",
        "type": "t_enum(ProjectStatus)1160"
      },
      {
        "astId": 1254,
        "contract": "contracts/Project.sol:Project",
        "label": "_current_milestone_index",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Milestone)1150_storage)dyn_storage": {
        "base": "t_struct(Milestone)1150_storage",
        "encoding": "dynamic_array",
        "label": "struct Project.Milestone[]",
        "numberOfBytes": "32"
      },
      "t_enum(MilestoneStatus)1154": {
        "encoding": "inplace",
        "label": "enum Project.MilestoneStatus",
        "numberOfBytes": "1"
      },
      "t_enum(ProjectStatus)1160": {
        "encoding": "inplace",
        "label": "enum Project.ProjectStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Milestone)1150_storage": {
        "encoding": "inplace",
        "label": "struct Project.Milestone",
        "members": [
          {
            "astId": 1138,
            "contract": "contracts/Project.sol:Project",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1140,
            "contract": "contracts/Project.sol:Project",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1142,
            "contract": "contracts/Project.sol:Project",
            "label": "releasePercentage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1144,
            "contract": "contracts/Project.sol:Project",
            "label": "deadline",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1147,
            "contract": "contracts/Project.sol:Project",
            "label": "status",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(MilestoneStatus)1154"
          },
          {
            "astId": 1149,
            "contract": "contracts/Project.sol:Project",
            "label": "proofUrl",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}